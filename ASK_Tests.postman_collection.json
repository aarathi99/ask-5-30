{
	"info": {
		"_postman_id": "09f30f26-666f-4aa3-a0b3-f08f847b58dc",
		"name": "ASK_Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "25753366"
	},
	"item": [
		{
			"name": "/sign-up  -Creates new user with STUDENT permission and sends verification email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message - user was created\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User was created\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\":\"{{studentEmail}}\",\n  \"name\": \"StudentRao Science\",\n  \"password\": \"12345\",\n  \"group\" : \"AAA\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/sign-up"
			},
			"response": []
		},
		{
			"name": "localhost:3000/ get student id and activation code",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"studentId\", jsonData[0].id);",
							"pm.environment.set(\"activationCode\", jsonData[0].activationCode);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/users?_where=(email,eq,{{studentEmail}})",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "_where",
							"value": "(email,eq,{{studentEmail}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/activate/ New Student activate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message- User was activated\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User was activated\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseURL}}/activate/{{studentId}}/{{activationCode}}"
			},
			"response": []
		},
		{
			"name": "/sign-in - TEACHER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"",
							"pm.test(\"Verify user role is TEACHER\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"TEACHER\");",
							"",
							"});",
							"var jsonData= pm.response.json();",
							"pm.environment.set(\"tokenTeacher\", jsonData.token);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"juliantate@razumkoff.ru\",\n  \"password\": \"12345\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/sign-in"
			},
			"response": []
		},
		{
			"name": "/sign-in student signs into application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"",
							"pm.test(\"Verify user role is STUDENT\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"STUDENT\");",
							"",
							"});",
							"var jsonData= pm.response.json();",
							"pm.environment.set(\"studentToken\", jsonData.token);",
							"pm.environment.set(\"studentId\", jsonData.user.id);",
							"",
							"pm.test(\"Student Group=aaa\", function () {",
							"    pm.expect(jsonData.user.group).to.eql(\"AAA\");",
							"});",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{studentEmail}}\",\n    \"password\":\"12345\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/sign-in"
			},
			"response": []
		},
		{
			"name": "/quiz - TEACHER creates new quiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"quizId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Demo Quiz Aarathi 05/25/2023\",\n  \"totalScore\": 18,\n  \"passingPercentage\": 75,\n  \"showStopperQuestion\": 1,\n  \"questions\": [\n    {\n      \"type\": \"TEXTUAL\",\n      \"question\": \"What is your name?\",\n      \"score\": 5\n    },\n    {\n      \"type\": \"SINGLE_CHOICE\",\n      \"question\": \"Which city is city largest in California?\",\n      \"score\": 7,\n      \"answer\": 2,\n      \"hasOtherOption\": false,\n      \"options\": [\n        \"San Francisco\",\n        \"Sacramento\",\n        \"Los Angeles\",\n        \"Redding\"\n      ]\n    },\n    {\n      \"type\": \"MULTIPLE_CHOICE\",\n      \"question\": \"Who was apple founded by?\",\n      \"score\": 6,\n      \"answers\": [\n        0,\n        1,\n        2\n      ],\n      \"hasOtherOption\": true,\n      \"options\": [\n        \"Steve Jobs\",\n        \"Steve Wozniak\",\n        \"Ronald Wayne\",\n        \"Ronald Reagan\"\n      ]\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/quiz"
			},
			"response": []
		},
		{
			"name": "/quizzes - Teacher list of all quizzes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify created quiz id\", function () {",
							"    var jsonData = pm.response.json();",
							"    var quiz =pm.environment.get(\"quizId\");",
							"    pm.expect(jsonData[jsonData.length-1].id).to.eql(quiz);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"name\": \"Demo Quiz\",\n    \"totalScore\": 18,\n    \"passingPercentage\": 75,\n    \"showStopperQuestion\": 1,\n    \"questions\": [\n      {\n        \"type\": \"TEXTUAL\",\n        \"question\": \"What is your name?\",\n        \"score\": 5\n      },\n      {\n        \"type\": \"SINGLE_CHOICE\",\n        \"question\": \"Which city is city largest in California?\",\n        \"score\": 7,\n        \"answer\": 2,\n        \"hasOtherOption\": false,\n        \"options\": [\n          \"San Francisco\",\n          \"Sacramento\",\n          \"Los Angeles\",\n          \"Redding\"\n        ]\n      },\n      {\n        \"type\": \"MULTIPLE_CHOICE\",\n        \"question\": \"Who was apple founded by?\",\n        \"score\": 6,\n        \"answers\": [\n          0,\n          1,\n          2\n        ],\n        \"hasOtherOption\": true,\n        \"options\": [\n          \"Steve Jobs\",\n          \"Steve Wozniak\",\n          \"Ronald Wayne\",\n          \"Ronald Reagan\"\n        ]\n      }\n    ]\n  }\n]\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/quizzes"
			},
			"response": []
		},
		{
			"name": "/quiz-TEacher updates quiz",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Demo Quiz Aarathi 05/27/23 updated\",\n  \"totalScore\": 18,\n  \"passingPercentage\": 75,\n  \"showStopperQuestion\": 1,\n  \"questions\": [\n    {\n      \"type\": \"TEXTUAL\",\n      \"question\": \"What is your name?\",\n      \"score\": 5\n    },\n    {\n      \"type\": \"SINGLE_CHOICE\",\n      \"question\": \"Which city is city largest in California?\",\n      \"score\": 7,\n      \"answer\": 2,\n      \"hasOtherOption\": false,\n      \"options\": [\n        \"San Francisco\",\n        \"Sacramento\",\n        \"Los Angeles\",\n        \"Redding\"\n      ]\n    },\n    {\n      \"type\": \"MULTIPLE_CHOICE\",\n      \"question\": \"Who was apple founded by?\",\n      \"score\": 6,\n      \"answers\": [\n        0,\n        1,\n        2\n      ],\n      \"hasOtherOption\": true,\n      \"options\": [\n        \"Steve Jobs\",\n        \"Steve Wozniak\",\n        \"Ronald Wayne\",\n        \"Ronald Reagan\"\n      ]\n    }\n  ],\n  \"id\": {{quizId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/quiz"
			},
			"response": []
		},
		{
			"name": "/assignment -- teacher *- creates new assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"assignmentId\", jsonData[0].id);",
							"pm.environment.set(\"assignmentGroupID\", jsonData[0].assignmentGroupID);",
							"",
							"pm.test(\"verify status, result and gradedBy before submission\", function () {",
							"    pm.expect(jsonData[0].status).to.eql(\"ASSIGNED\");",
							"    pm.expect(jsonData[0].result).to.eql(\"PENDING\");",
							"    pm.expect(jsonData[0].gradedBy).to.eql(\"NONE\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"quizId\": {{quizId}},\n  \"userIds\": [{{studentId}}]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/assignment"
			},
			"response": []
		},
		{
			"name": "/my-assignments  Returns list of all assignments that need to be completed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify quiz status is ASSIGNED\", function () {",
							"    pm.expect(jsonData[0].status).to.eql(\"ASSIGNED\");",
							"});",
							"",
							"pm.test(\"VErify the student has atleast 1 assignment\",function() {",
							"    pm.expect(jsonData[jsonData.length-1].status).to.eql(\"ASSIGNED\");",
							"    ",
							"    ",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{studentToken}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"id\": {{assignmentId}},\n    \"quiz\": {\n      \"name\": \"Demo Quiz\",\n      \"showStopperQuestion\": 1,\n      \"questions\": [\n        {\n          \"type\": \"TEXTUAL\",\n          \"question\": \"What is your name?\"\n        },\n        {\n          \"type\": \"SINGLE_CHOICE\",\n          \"question\": \"Which city is city largest in California?\",\n          \"hasOtherOption\": false,\n          \"options\": [\n            \"San Francisco\",\n            \"Sacramento\",\n            \"Los Angeles\",\n            \"Redding\"\n          ]\n        },\n        {\n          \"type\": \"MULTIPLE_CHOICE\",\n          \"question\": \"Who was apple founded by?\",\n          \"hasOtherOption\": true,\n          \"options\": [\n            \"Steve Jobs\",\n            \"Steve Wozniak\",\n            \"Ronald Wayne\",\n            \"Ronald Reagan\"\n          ]\n        }\n      ]\n    },\n    \"createdAt\": \"2018-04-03T15:47:02.524Z\"\n  }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/my-assignments"
			},
			"response": []
		},
		{
			"name": "/submit-assignment -- Student submit assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify status,result, gradedBy after submission\", function () {",
							"    pm.expect(jsonData[jsonData.length-1].status).to.eql(\"GRADED\");",
							"    pm.expect(jsonData[jsonData.length-1].result).to.eql(\"PASSED\");",
							"    pm.expect(jsonData[jsonData.length-1].gradedBy).to.eql(\"AUTOMATIC\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{studentToken}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"assignmentId\":{{assignmentId}},\n    \"answers\": [\n        {\n            \"textAnswer\": \"Jonny\",\n            \"answer\": null\n        },\n        {\n            \"textAnswer\": \"\",\n            \"answer\": 2\n        },\n        {\n            \"textAnswer\": \"\",\n            \"answer\": [\n                0,\n                1,\n                2\n            ]\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/submit-assignment"
			},
			"response": []
		},
		{
			"name": "/assignment/:{{assignmentId}} Teacher grades assignment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify status,result, gradedBy after submission\", function () {",
							"    pm.expect(jsonData[jsonData.length-1].status).to.eql(\"GRADED\");",
							"    pm.expect(jsonData[jsonData.length-1].result).to.eql(\"PASSED\");",
							"    pm.expect(jsonData[jsonData.length-1].gradedBy).to.eql(\"TEACHER\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"summary\": \"Summary from teacher\",\n  \"result\": \"PASSED\",\n  \"grades\": [\n    {\n      \"comment\": \"Teacher comment\",\n      \"additionalScore\": 5\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/assignment/{{assignmentId}}"
			},
			"response": []
		},
		{
			"name": "/my-grades --  Returns list of all submitted/graded assignments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"verify status, result and gradedBy before submission\", function () {",
							"    pm.expect(jsonData[0].status).to.eql(\"GRADED\");",
							"    pm.expect(jsonData[0].result).to.eql(\"PASSED\");",
							"    pm.expect(jsonData[0].gradedBy).to.eql(\"TEACHER\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{studentToken}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"id\": 12,\n    \"quiz\": {\n      \"name\": \"Demo Quiz\",\n      \"totalScore\": 18,\n      \"passingPercentage\": 75,\n      \"showStopperQuestion\": 1,\n      \"questions\": [\n        {\n          \"type\": \"TEXTUAL\",\n          \"question\": \"What is your name?\",\n          \"score\": 5\n        },\n        {\n          \"type\": \"SINGLE_CHOICE\",\n          \"question\": \"Which city is city largest in California?\",\n          \"score\": 7,\n          \"answer\": 2,\n          \"hasOtherOption\": false,\n          \"options\": [\n            \"San Francisco\",\n            \"Sacramento\",\n            \"Los Angeles\",\n            \"Redding\"\n          ]\n        },\n        {\n          \"type\": \"MULTIPLE_CHOICE\",\n          \"question\": \"Who was apple founded by?\",\n          \"score\": 6,\n          \"answers\": [\n            0,\n            1,\n            2\n          ],\n          \"hasOtherOption\": true,\n          \"options\": [\n            \"Steve Jobs\",\n            \"Steve Wozniak\",\n            \"Ronald Wayne\",\n            \"Ronald Reagan\"\n          ]\n        }\n      ]\n    },\n    \"assignmentGroupID\": \"2250e42a-52b1-451e-8de6-788fb561a9de\",\n    \"status\": \"ASSIGNED\",\n    \"result\": \"PASSED\",\n    \"gradedBy\": \"NONE\",\n    \"answers\": [\n      {\n        \"answer\": [\n          0,\n          2,\n          3,\n          4\n        ],\n        \"textAnswer\": \"This is my answer\"\n      }\n    ],\n    \"scores\": [\n      0,\n      2,\n      3\n    ],\n    \"additionalScores\": [\n      0,\n      2,\n      3\n    ],\n    \"comments\": [\n      \"Comment 1\",\n      \"Comment 2\"\n    ],\n    \"summary\": \"This is quiz summary\",\n    \"submittedAt\": \"2018-04-03T15:47:02.524Z\",\n    \"gradedAt\": \"2018-04-03T15:47:02.524Z\"\n  },\n  {\n    \"id\": 12,\n    \"quiz\": {\n      \"name\": \"Demo Quiz\",\n      \"showStopperQuestion\": 1,\n      \"questions\": [\n        {\n          \"type\": \"TEXTUAL\",\n          \"question\": \"What is your name?\"\n        },\n        {\n          \"type\": \"SINGLE_CHOICE\",\n          \"question\": \"Which city is city largest in California?\",\n          \"hasOtherOption\": false,\n          \"options\": [\n            \"San Francisco\",\n            \"Sacramento\",\n            \"Los Angeles\",\n            \"Redding\"\n          ]\n        },\n        {\n          \"type\": \"MULTIPLE_CHOICE\",\n          \"question\": \"Who was apple founded by?\",\n          \"hasOtherOption\": true,\n          \"options\": [\n            \"Steve Jobs\",\n            \"Steve Wozniak\",\n            \"Ronald Wayne\",\n            \"Ronald Reagan\"\n          ]\n        }\n      ]\n    },\n    \"createdAt\": \"2018-04-03T15:47:02.524Z\"\n  }\n]\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/my-grades"
			},
			"response": []
		},
		{
			"name": "/forgot-password -Submits request for password change",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Message - Reset password email was sent\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Reset password email was sent\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{studentToken}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{studentEmail}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/forgot-password"
			},
			"response": []
		},
		{
			"name": "/quiz/{{quizId}} TEacher",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message : Quiz was deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"Quiz was deleted\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": "{{baseURL}}/quiz/{{quizId}}"
			},
			"response": []
		},
		{
			"name": "/assignment/:{{assignmentGroupID}} Teacher deletes group of assignments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Message - Assignment was deleted\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Assignment was deleted\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/assignment/:{{assignmentGroupID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"assignment",
						":{{assignmentGroupID}}"
					],
					"variable": [
						{
							"key": "{{assignmentGroupID}}",
							"value": "3a58afc8-f4fb-444e-8800-a9e1c75fef24"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/users/:{{userId}} Teacher deletes user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{tokenTeacher}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": "{{baseURL}}/users/{{studentId}}"
			},
			"response": []
		}
	]
}